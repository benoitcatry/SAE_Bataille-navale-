Index: src/control/BattleShipControler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package control;\r\n\r\nimport boardifier.control.ActionFactory;\r\nimport boardifier.control.ActionPlayer;\r\nimport boardifier.control.Controller;\r\nimport boardifier.model.GameElement;\r\nimport boardifier.model.ContainerElement;\r\nimport boardifier.model.Model;\r\nimport boardifier.model.Player;\r\nimport boardifier.model.action.ActionList;\r\nimport boardifier.view.View;\r\nimport model.BattleShipStageModel;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class BattleShipControler extends Controller {\r\n\r\n    BufferedReader consoleIn;\r\n    boolean firstPlayer;\r\n    int stadeDeLaPartie; // si 1 on pose le bateau Si 2 feu a vaulonté\r\n    int modedejeux ; // pour savoir qui joue le bot toujour quand 2\r\n    int count =0;\r\n\r\n    public BattleShipControler(Model model, View view) {\r\n        super(model, view);\r\n        firstPlayer = true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public void stageLoop() {\r\n        consoleIn = new BufferedReader(new InputStreamReader(System.in));\r\n        update();\r\n        while(! model.isEndStage()) {\r\n            playTurn();\r\n            endOfTurn();\r\n            update();\r\n\r\n        }\r\n        endGame();\r\n    }\r\n\r\n\r\n    private void playTurn() {\r\n        Player p = model.getCurrentPlayer();\r\n        //il y a du stade a la partie ; la partie 1 ou on pose les bateau | la partie 2 ou on tire\r\n        if(stadeDeLaPartie == 1) { //on pose les bateau\r\n            //verif si bot\r\n            if (p.getType() == Player.COMPUTER) {\r\n                //a modif pour le bot\r\n                System.out.println(\"COMPUTER PLAYS\");\r\n                BattleShipDecider decider = new BattleShipDecider(model,this);\r\n                ActionPlayer play = new ActionPlayer(model, this, decider, null);\r\n                play.start();\r\n            }\r\n            else { // si pas bot alors joueur\r\n                boolean ok = false;\r\n                for(int i = 0; i < modedejeux; i++) {\r\n                    while (!ok) {\r\n                    System.out.print(p.getName()+ \" > \");\r\n                    try {\r\n                        String line = consoleIn.readLine();\r\n                        if (line.length() == 3) {\r\n                            ok = analyseAndPlayPose(line, i);\r\n                        }\r\n                        if (!ok) {\r\n                            System.out.println(\"incorrect instruction. retry !\");\r\n                        }\r\n                    }\r\n                    catch(IOException e) {}\r\n                }}\r\n\r\n            }   \r\n        } else if (count == 2) {// partie de la partie 2 donc on tire\r\n            if (p.getType() == Player.COMPUTER) {\r\n                //a modif avec le methode des bot\r\n                System.out.println(\"COMPUTER PLAYS\");\r\n                BattleShipDecider decider = new BattleShipDecider(model,this);\r\n                ActionPlayer play = new ActionPlayer(model, this, decider, null);\r\n                play.start();\r\n            }\r\n            else {\r\n                boolean ok = false;\r\n                while (!ok) {\r\n                    System.out.print(p.getName()+ \" > \");\r\n                    try {\r\n                        String line = consoleIn.readLine();\r\n                        if (line.length() == 2) {\r\n                            ok = analyseAndPlay(line);\r\n                        }\r\n                        if (!ok) {\r\n                            System.out.println(\"incorrect instruction. retry !\");\r\n                        }\r\n                    }\r\n                    catch(IOException e) {}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //posse les bateau\r\n    private boolean analyseAndPlayPose(String line, int m) {\r\n        BattleShipStageModel gameStage = (BattleShipStageModel) model.getGameStage();\r\n        char sens = Character.toUpperCase(line.charAt(0));\r\n        if (sens != 'H' && sens != 'V') {return false;}\r\n        int col = (int) Character.toUpperCase((line.charAt(1) - 'A'));\r\n        int row = (int) (line.charAt(2) - '1');\r\n        if ((row<0)||(row>10)) return false;\r\n        if ((col<0)||(col>10)) return false;\r\n        if (model.getIdPlayer() == 0) {\r\n            if (!(gameStage.VerifPasColer(gameStage.getShipsPlayer1(),row,col,gameStage.ShipPlayer1[m].getTaille(), sens))){return false;}\r\n            else {\r\n                gameStage.ShipPlayer1[m].setCordonnerShip(col, row, sens);\r\n            }\r\n        }\r\n        if (model.getIdPlayer() == 1) {\r\n            if (!(gameStage.VerifPasColer(gameStage.getShipsPlayer2(),row,col,gameStage.ShipPlayer2[m].getTaille(), sens))){return false;}\r\n            else {\r\n                gameStage.ShipPlayer2[m].setCordonnerShip(col, row, sens);\r\n            }\r\n        }\r\n        if(gameStage.ShipPlayer1.length-1 == m){\r\n            model.setNextPlayer();\r\n            count ++;\r\n            return true;\r\n        }\r\n        return true;\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        //tire le bouler\r\n        private boolean analyseAndPlay (String line){\r\n            BattleShipStageModel gameStage = (BattleShipStageModel) model.getGameStage();            // get the pawn value from the first char\r\n\r\n            // get the cords in the board\r\n            int col = (int) (line.charAt(1) - 'A');\r\n            int row = (int) (line.charAt(2) - '1');\r\n            // check coords validity\r\n            if ((row<0)||(row>10)) return false;\r\n            if ((col<0)||(col>10)) return false;\r\n            // check if the pawn is still in its pot\r\n            ContainerElement tire = null;\r\n            if (model.getIdPlayer() == 0) {\r\n                tire = gameStage.getBoardPlayer1();\r\n            }\r\n            else {\r\n                tire = gameStage.getBoardPlayer2();\r\n            }\r\n            if (tire.isEmptyAt(0,0)) return false;\r\n            if (model.getIdPlayer() == 0) {\r\n                GameElement misile = tire.getElement(gameStage.getPlayer1ToPlay()-1,0);\r\n                gameStage.getBoardPlayer1().computeValidCells(5);\r\n                if (!gameStage.getBoardPlayer1().canReachCell(row,col)) {return false;}\r\n                gameStage.toucheroupas(gameStage.getShipsPlayer2(), col,row);\r\n                ActionList actions = ActionFactory.generatePutInContainer(model, misile, \"BattleBoardPlayer1\", row, col);\r\n                actions.setDoEndOfTurn(true);\r\n                ActionPlayer play = new ActionPlayer(model, this, actions);\r\n                play.start();\r\n                return true;\r\n            }else {\r\n                GameElement misile = tire.getElement(gameStage.getPlayer1ToPlay()-1,0);\r\n                gameStage.getBoardPlayer1().computeValidCells(5);\r\n                if (!gameStage.getBoardPlayer1().canReachCell(row,col)) {return false;}\r\n                gameStage.toucheroupas(gameStage.getShipsPlayer2(), col,row);\r\n                ActionList actions = ActionFactory.generatePutInContainer(model, misile, \"BattleBoardPlayer1\", row, col);\r\n                actions.setDoEndOfTurn(true);\r\n                ActionPlayer play = new ActionPlayer(model, this, actions);\r\n                play.start();\r\n                return true;\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        //aide pour les méthode anlyseandplay\r\n\r\n    }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/control/BattleShipControler.java b/src/control/BattleShipControler.java
--- a/src/control/BattleShipControler.java	(revision a289afdd04b83831a1a5b8c54434fe0597444db0)
+++ b/src/control/BattleShipControler.java	(date 1715930540203)
@@ -19,8 +19,8 @@
 
     BufferedReader consoleIn;
     boolean firstPlayer;
-    int stadeDeLaPartie; // si 1 on pose le bateau Si 2 feu a vaulonté
-    int modedejeux ; // pour savoir qui joue le bot toujour quand 2
+    int stadeDeLaPartie; // si 1 on pose le bateau Si 2 feu a volonté
+    int modedejeux ; // pour savoir qui joue le bot toujours quand 2
     int count =0;
 
     public BattleShipControler(Model model, View view) {
Index: SAE_Bataille-navale.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/Test\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SAE_Bataille-navale.iml b/SAE_Bataille-navale.iml
--- a/SAE_Bataille-navale.iml	(revision a289afdd04b83831a1a5b8c54434fe0597444db0)
+++ b/SAE_Bataille-navale.iml	(date 1715930540221)
@@ -9,4 +9,7 @@
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
+  <component name="SonarLintModuleSettings">
+    <option name="uniqueId" value="bfa166c4-4edb-41bc-b63a-540d43564eb8" />
+  </component>
 </module>
\ No newline at end of file
Index: src/boardifier/control/Decider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package boardifier.control;\r\n\r\nimport boardifier.model.action.ActionList;\r\nimport boardifier.model.Model;\r\n\r\npublic abstract class Decider {\r\n    protected Model model;\r\n    protected Controller control;\r\n\r\n    public Decider(Model model, Controller control) {\r\n        this.model = model;\r\n        this.control = control;\r\n    }\r\n\r\n    public abstract ActionList decide();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/boardifier/control/Decider.java b/src/boardifier/control/Decider.java
--- a/src/boardifier/control/Decider.java	(revision a289afdd04b83831a1a5b8c54434fe0597444db0)
+++ b/src/boardifier/control/Decider.java	(date 1715930540228)
@@ -2,6 +2,9 @@
 
 import boardifier.model.action.ActionList;
 import boardifier.model.Model;
+import model.BattleBoard;
+import model.BattleShipStageFactory;
+import model.BattleShipStageModel;
 
 public abstract class Decider {
     protected Model model;
@@ -14,3 +17,4 @@
 
     public abstract ActionList decide();
 }
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1ae606cc-c7ee-4439-bac4-d266b9487482\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/ShipConsole.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/ShipConsole.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/model/BattleShipStageFactory.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/BattleShipStageFactory.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/model/Misille.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/Misille.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/battleboardview.java\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2fui06HPhhYAIiVld7iSNQqUFlF\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.ShipConsole.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"/home/benoit/Documents/hhh/HoleConsole\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1ae606cc-c7ee-4439-bac4-d266b9487482\" name=\"Changes\" comment=\"\" />\r\n      <created>1714657139962</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1714657139962</updated>\r\n      <workItem from=\"1714657141468\" duration=\"1103000\" />\r\n      <workItem from=\"1714940634428\" duration=\"5621000\" />\r\n      <workItem from=\"1714979536527\" duration=\"2472000\" />\r\n      <workItem from=\"1714985650652\" duration=\"2382000\" />\r\n      <workItem from=\"1714995785437\" duration=\"4342000\" />\r\n      <workItem from=\"1715003632064\" duration=\"2127000\" />\r\n      <workItem from=\"1715067851817\" duration=\"6793000\" />\r\n      <workItem from=\"1715082201161\" duration=\"10325000\" />\r\n      <workItem from=\"1715439453596\" duration=\"2684000\" />\r\n      <workItem from=\"1715543453838\" duration=\"2705000\" />\r\n      <workItem from=\"1715663410574\" duration=\"1881000\" />\r\n      <workItem from=\"1715670533089\" duration=\"5721000\" />\r\n      <workItem from=\"1715753268731\" duration=\"3380000\" />\r\n      <workItem from=\"1715859428731\" duration=\"13206000\" />\r\n      <workItem from=\"1715926269190\" duration=\"1740000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a289afdd04b83831a1a5b8c54434fe0597444db0)
+++ b/.idea/workspace.xml	(date 1715930623977)
@@ -6,10 +6,9 @@
   <component name="ChangeListManager">
     <list default="true" id="1ae606cc-c7ee-4439-bac4-d266b9487482" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ShipConsole.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/ShipConsole.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/model/BattleShipStageFactory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/BattleShipStageFactory.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/model/Misille.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/Misille.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/view/battleboardview.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/SAE_Bataille-navale.iml" beforeDir="false" afterPath="$PROJECT_DIR$/SAE_Bataille-navale.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/boardifier/control/Decider.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/boardifier/control/Decider.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/control/BattleShipControler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/control/BattleShipControler.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,6 +25,9 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 2
 }</component>
@@ -36,8 +38,8 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
-    "Application.ShipConsole.executor": "Run",
     "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
     "git-widget-placeholder": "main",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "/home/benoit/Documents/hhh/HoleConsole",
@@ -78,8 +80,7 @@
       <workItem from="1715663410574" duration="1881000" />
       <workItem from="1715670533089" duration="5721000" />
       <workItem from="1715753268731" duration="3380000" />
-      <workItem from="1715859428731" duration="13206000" />
-      <workItem from="1715926269190" duration="1740000" />
+      <workItem from="1715859428731" duration="1040000" />
     </task>
     <servers />
   </component>
